def create_matrix(key):

matrix = []

for char in key.upper():

if char not in matrix and char != 'J':

matrix.append(char)

for char in "ABCDEFGHIKLMNOPQRSTUVWXYZ":

if char not in matrix:

matrix.append(char)

return [matrix[i:i+5] for i in range(0, 25, 5)]

def find_position(char, matrix):

for i, row in enumerate (matrix):

if char in row:

return i, row.index(char)

def encrypt_playfair (msg, key):

"") msg = msg.upper().replace("J", "I").replace("",

if len(msg) % 2 != 0:

msg += 'X'

matrix = create_matrix(key)

cipher =

for i in range(0, len(msg), 2);

a, bmsg[i], msg[i+1]

rowl, coll find_position(a, matrix)

row2, col2 find_position(b, matrix)

if row1 == row2:

cipher += matrix[row1] [(col1+1)%5] +

matrix[row2][(col2+1)%5] elif coll == col2:

cipher += matrix [(row1+1)%5] [coll] + matrix[(row2+1)%5] [col2]

else:

cipher + matrix[row1] [col2] + matrix[row2]

[col1]

return cipher

print("Encrypted:", encrypt_playfair("HELLO", "KEYWORD"))
